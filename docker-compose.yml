services:
  backend:
    container_name: 'backend'
    restart: unless-stopped
    build:
      context: backend
      dockerfile: Dockerfile
    image: backend-kupi
    ports:
      - 4000:3000
    env_file:
      - .env
    depends_on:
      - my_bd
    networks:
      - backend

  frontend:
    container_name: 'frontend'
    restart: unless-stopped
    build:
      context: frontend
      dockerfile: Dockerfile
    image: frontend-kupi
    ports:
      - 5000:80
    networks:
      - frontend

  my_bd:
    container_name: postgres
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  adminer:
    container_name: adminer
    image: adminer
    restart: unless-stopped
    ports:
      - 8081:8080
    networks:
      - backend

volumes:
  postgres_data:

networks:
  frontend:
  backend:
